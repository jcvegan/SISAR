//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.3603
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace SISAR.Web.LocalService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="LocalService.LocalService")]
    public interface LocalService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:LocalService/SelectAll", ReplyAction="urn:LocalService/SelectAllResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.IAsyncResult BeginSelectAll(SISAR.Web.LocalService.SelectAllRequest request, System.AsyncCallback callback, object asyncState);
        
        SISAR.Web.LocalService.SelectAllResponse EndSelectAll(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelectAll", WrapperNamespace="", IsWrapped=true)]
    public partial class SelectAllRequest {
        
        public SelectAllRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SelectAllResponse", WrapperNamespace="", IsWrapped=true)]
    public partial class SelectAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public SISAR.Web.LocalService.ArrayOfXElement SelectAllResult;
        
        public SelectAllResponse() {
        }
        
        public SelectAllResponse(SISAR.Web.LocalService.ArrayOfXElement SelectAllResult) {
            this.SelectAllResult = SelectAllResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface LocalServiceChannel : SISAR.Web.LocalService.LocalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SelectAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SISAR.Web.LocalService.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SISAR.Web.LocalService.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LocalServiceClient : System.ServiceModel.ClientBase<SISAR.Web.LocalService.LocalService>, SISAR.Web.LocalService.LocalService {
        
        private BeginOperationDelegate onBeginSelectAllDelegate;
        
        private EndOperationDelegate onEndSelectAllDelegate;
        
        private System.Threading.SendOrPostCallback onSelectAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LocalServiceClient() {
        }
        
        public LocalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("No se puede establecer el objeto CookieContainer. Asegúrese de que el enlace cont" +
                            "iene un objeto HttpCookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SelectAllCompletedEventArgs> SelectAllCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SISAR.Web.LocalService.LocalService.BeginSelectAll(SISAR.Web.LocalService.SelectAllRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectAll(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSelectAll(System.AsyncCallback callback, object asyncState) {
            SISAR.Web.LocalService.SelectAllRequest inValue = new SISAR.Web.LocalService.SelectAllRequest();
            return ((SISAR.Web.LocalService.LocalService)(this)).BeginSelectAll(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SISAR.Web.LocalService.SelectAllResponse SISAR.Web.LocalService.LocalService.EndSelectAll(System.IAsyncResult result) {
            return base.Channel.EndSelectAll(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private SISAR.Web.LocalService.ArrayOfXElement EndSelectAll(System.IAsyncResult result) {
            SISAR.Web.LocalService.SelectAllResponse retVal = ((SISAR.Web.LocalService.LocalService)(this)).EndSelectAll(result);
            return retVal.SelectAllResult;
        }
        
        private System.IAsyncResult OnBeginSelectAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginSelectAll(callback, asyncState);
        }
        
        private object[] OnEndSelectAll(System.IAsyncResult result) {
            SISAR.Web.LocalService.ArrayOfXElement retVal = this.EndSelectAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSelectAllCompleted(object state) {
            if ((this.SelectAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectAllCompleted(this, new SelectAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectAllAsync() {
            this.SelectAllAsync(null);
        }
        
        public void SelectAllAsync(object userState) {
            if ((this.onBeginSelectAllDelegate == null)) {
                this.onBeginSelectAllDelegate = new BeginOperationDelegate(this.OnBeginSelectAll);
            }
            if ((this.onEndSelectAllDelegate == null)) {
                this.onEndSelectAllDelegate = new EndOperationDelegate(this.OnEndSelectAll);
            }
            if ((this.onSelectAllCompletedDelegate == null)) {
                this.onSelectAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectAllCompleted);
            }
            base.InvokeAsync(this.onBeginSelectAllDelegate, null, this.onEndSelectAllDelegate, this.onSelectAllCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SISAR.Web.LocalService.LocalService CreateChannel() {
            return new LocalServiceClientChannel(this);
        }
        
        private class LocalServiceClientChannel : ChannelBase<SISAR.Web.LocalService.LocalService>, SISAR.Web.LocalService.LocalService {
            
            public LocalServiceClientChannel(System.ServiceModel.ClientBase<SISAR.Web.LocalService.LocalService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSelectAll(SISAR.Web.LocalService.SelectAllRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SelectAll", _args, callback, asyncState);
                return _result;
            }
            
            public SISAR.Web.LocalService.SelectAllResponse EndSelectAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                SISAR.Web.LocalService.SelectAllResponse _result = ((SISAR.Web.LocalService.SelectAllResponse)(base.EndInvoke("SelectAll", _args, result)));
                return _result;
            }
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Silverlight.ServiceReference", "3.0.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement() {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes {
            get {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema() {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer) {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            ) {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader) {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            ) {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element)) {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else {
                    reader.Skip();
                }
            }
        }
    }
}
